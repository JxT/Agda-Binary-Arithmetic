
-- Addition and subtraction

open import Data.Nat
open import Relation.Binary.PropositionalEquality

plus : ℕ → ℕ → ℕ  -- \to
plus zero    y = y
plus (suc x) y = suc (plus x y)

minusOne : ℕ → ℕ
minusOne zero = zero
minusOne (suc n) = n


-- Lemma for the associativity
-- property of addition

assoc-plus : ∀{m n p} → ((m + n) + p) ≡ (m + (n + p))
assoc-plus {zero}  = refl
assoc-plus {suc n} = cong suc (assoc-plus {n})
